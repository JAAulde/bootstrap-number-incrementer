/**
 * @file A jQuery/Boostrap based widget for use on text and number inputs to
 *       turn them into Bootstrap input groups with plus and minus buttons for
 *       incrementing and decrementing the input's numeric value.
 * @version 1.0.0
 * @copyright Jim Auldridge <auldridgej@gmail.com> 2016
 * @license MIT
 * @see {@link https://github.com/JAAulde/bootstrap-number-incrementer|GitHub Repository}
 * @see {@link http://getbootstrap.com/|Bootstrap}
 * @see {@link https://jquery.com/|jQuery}
 */
!function(t){"use strict";var a=t.parseInt,e=t.jQuery,n=t.template_manager,i=e.fn.prop,r=e.fn.attr,s={width_factor:"dynamic",wrapper_class:null,input_class:null,incrementer_class:null,decrementer_class:null},c={CLASS_NAME_INPUT:"bs-number-incremented",CLASS_NAME_WRAPPER:"bs-number-incrementer",NAMESPACE_EVENTS:"bs-number-incrementer",DATA_PROPERTY_WIDGET_DATA:"widgetData"},l=function(){return l.$||(l.$=e(n.get("partials/wrapper.html"))),l.$.clone()},p=function(t){var a,e,n,i=t.find("input."+c.CLASS_NAME_INPUT),r=i.data(c.DATA_PROPERTY_WIDGET_DATA).options;switch(r.width_factor){case"range":a=(i.attr("min")||"").length,e=(i.attr("max")||"").length,n=.75*(a>e?a:e),t.width(7+(n||1)+"em");break;case"dynamic":n=(i.val()||"").length||1,t.width(7+n+"em")}},o=function(t){var e,n,i,r=a(t.val(),10),s=[];isNaN(r)||(e=a(t.attr("min"),10),!isNaN(e)&&r<=e&&s.push('[data-operation="decrement"]'),n=a(t.attr("max"),10),!isNaN(n)&&r>=n&&s.push('[data-operation="increment"]')),i=t.closest("div."+c.CLASS_NAME_WRAPPER).find("button").prop("disabled",!1),s.length&&i.filter(s.join(", ")).prop("disabled",!0)};e.fn.prop=function(){var t=arguments;return 2===t.length&&"disabled"===t[0]&&this.filter("input."+c.CLASS_NAME_INPUT).each(function(){var a=e(this);t[1]===!0?i.apply(a.closest("div."+c.CLASS_NAME_WRAPPER).find("button"),t):o(a)}),i.apply(this,t)},e.fn.attr=function(){var t=arguments,a=r.apply(this,t);return 2===t.length&&["min","max"].indexOf(t[0])>-1&&this.filter("input."+c.CLASS_NAME_INPUT).each(function(){var t=e(this);p(t.closest("div."+c.CLASS_NAME_WRAPPER))}),a},e.fn.numberIncrementer=function(t){switch(t){case"increment":this.filter("input."+c.CLASS_NAME_INPUT).each(function(){var t,n,i,r=e(this);r.prop("disabled")||(t=a(r.val(),10),isNaN(t)&&(t=0),n=a(r.attr("min"),10),!isNaN(n)&&n>t?r.val(n).trigger("change"):(i=a(r.attr("max"),10),(isNaN(i)||t<i)&&r.val(t+1).trigger("change")))});break;case"decrement":this.filter("input."+c.CLASS_NAME_INPUT).each(function(){var t,n,i,r=e(this);r.prop("disabled")||(t=a(r.val(),10),isNaN(t)&&(t=0),n=a(r.attr("max"),10),!isNaN(n)&&t>n?r.val(n).trigger("change"):(i=a(r.attr("min"),10),(isNaN(i)||i<t)&&r.val(t-1).trigger("change")))});break;case"destroy":this.filter("input."+c.CLASS_NAME_INPUT).each(function(){var t,a,n=e(this),i=n.data(c.DATA_PROPERTY_WIDGET_DATA),r=i.options;n.closest("div."+c.CLASS_NAME_WRAPPER).replaceWith(n);for(t in i.originals)if(Object.prototype.hasOwnProperty.call(i.originals,t))for(a in i.originals[t])Object.prototype.hasOwnProperty.call(i.originals[t],a)&&n[t](a,i.originals[t][a]);r.input_class&&n.removeClass(r.input_class),n.off("change."+c.NAMESPACE_EVENTS).removeData(c.DATA_PROPERTY_WIDGET_DATA).removeClass(c.CLASS_NAME_INPUT)});break;default:var n=e.extend({},s,t||{});this.filter('input[type="text"], input[type="number"]').not("."+c.CLASS_NAME_INPUT).each(function(){var t,a=e(this),i=l(),r={originals:{attr:{type:a.attr("type")},css:{"text-align":a.css("text-align")||"start"}},options:n};a.replaceWith(i),i.find("span.bs-number-incremented-target:first").replaceWith(a),a.prop("disabled",a.prop("disabled")).attr("type","text").css("text-align","dynamic"===n.width_factor?"center":"right").addClass(c.CLASS_NAME_INPUT).on("change."+c.NAMESPACE_EVENTS,function(){"dynamic"===a.data(c.DATA_PROPERTY_WIDGET_DATA).options.width_factor&&p(a.closest("div."+c.CLASS_NAME_WRAPPER)),o(a)}).data(c.DATA_PROPERTY_WIDGET_DATA,r),p(i),t=i.find("button[data-operation]").on("click",function(){var t=e(this).data("operation");["increment","decrement"].indexOf(t)>=0&&a.numberIncrementer(t)}),n.input_class&&a.addClass(n.input_class),n.wrapper_class&&i.addClass(n.wrapper_class),n.incrementer_class&&t.filter('[data-operation="increment"]').addClass(n.incrementer_class),n.decrementer_class&&t.filter('[data-operation="decrement"]').addClass(n.decrementer_class)})}return this}}(this),function(){template_manager.cache("partials/wrapper.html",'<div class="bs-number-incrementer"><div class="input-group"><span class="input-group-btn"><button type="button" class="btn btn-default" data-operation="decrement"><span class="glyphicon glyphicon-minus"></span></button> </span><span class="bs-number-incremented-target"></span> <span class="input-group-btn"><button type="button" class="btn btn-default" data-operation="increment"><span class="glyphicon glyphicon-plus"></span></button></span></div></div>')}();
//# sourceMappingURL=maps/number-incrementer.bootstrap.min.js.map
